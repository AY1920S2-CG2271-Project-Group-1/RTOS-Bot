#include <MKL25Z4.h>
#include "macros.h"

void initPWM(void) {
    SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK | SIM_SCGC5_PORTB_MASK | SIM_SCGC5_PORTD_MASK;

    PORTD->PCR[PTD3_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTD->PCR[PTD3_Pin] |= PORT_PCR_MUX(4);
    PORTA->PCR[PTA12_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTA->PCR[PTA12_Pin] |= PORT_PCR_MUX(4);
  
    PORTD->PCR[PTD0_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTD->PCR[PTD0_Pin] |= PORT_PCR_MUX(4);
     PORTD->PCR[PTD2_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTD->PCR[PTD2_Pin] |= PORT_PCR_MUX(4);  
  
    PORTD->PCR[PTD5_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTD->PCR[PTD5_Pin] |= PORT_PCR_MUX(4);
     PORTD->PCR[PTD1_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTD->PCR[PTD1_Pin] |= PORT_PCR_MUX(4);
  
    PORTB->PCR[PTB2_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTB->PCR[PTB2_Pin] |= PORT_PCR_MUX(3);
  PORTB->PCR[PTB3_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTB->PCR[PTB3_Pin] |= PORT_PCR_MUX(3);
    /*
    PORTA->PCR[PTA1_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTA->PCR[PTA1_Pin] |= PORT_PCR_MUX(4);
  PORTA->PCR[PTA2_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTA->PCR[PTA2_Pin] |= PORT_PCR_MUX(4);*/
  
    SIM->SCGC6 |= SIM_SCGC6_TPM0_MASK | SIM_SCGC6_TPM1_MASK | SIM_SCGC6_TPM2_MASK ;
  
    SIM->SOPT2 &= ~SIM_SOPT2_TPMSRC_MASK;
    SIM->SOPT2 |= SIM_SOPT2_TPMSRC(1);
  
    TPM0->MOD = 256;
    TPM1->MOD = 256;
    TPM2->MOD = 256;
    
    TPM0->SC &= ~((TPM_SC_CMOD_MASK) | (TPM_SC_PS_MASK));
    TPM0->SC |= (TPM_SC_CMOD(1) | TPM_SC_PS(4));
    TPM0->SC &= ~(TPM_SC_CPWMS_MASK);
    
    TPM1->SC &= ~((TPM_SC_CMOD_MASK) | (TPM_SC_PS_MASK));
    TPM1->SC |= (TPM_SC_CMOD(1) | TPM_SC_PS(7));
    TPM1->SC &= ~(TPM_SC_CPWMS_MASK);
    
    TPM2->SC &= ~((TPM_SC_CMOD_MASK) | (TPM_SC_PS_MASK));
    TPM2->SC |= (TPM_SC_CMOD(1) | TPM_SC_PS(4));
    TPM2->SC &= ~(TPM_SC_CPWMS_MASK);

    TPM0_C3SC &= ~((TPM_CnSC_ELSB_MASK) | (TPM_CnSC_ELSA_MASK) | (TPM_CnSC_MSB_MASK) | (TPM_CnSC_MSA_MASK));
    TPM0_C3SC |= (TPM_CnSC_ELSB(1) | TPM_CnSC_MSB(1));
    TPM1_C0SC &= ~((TPM_CnSC_ELSB_MASK) | (TPM_CnSC_ELSA_MASK) | (TPM_CnSC_MSB_MASK) | (TPM_CnSC_MSA_MASK));
    TPM1_C0SC |= (TPM_CnSC_ELSB(1) | TPM_CnSC_MSB(1));
    
    TPM0_C0SC &= ~((TPM_CnSC_ELSB_MASK) | (TPM_CnSC_ELSA_MASK) | (TPM_CnSC_MSB_MASK) | (TPM_CnSC_MSA_MASK));
    TPM0_C0SC |= (TPM_CnSC_ELSB(1) | TPM_CnSC_MSB(1));
    TPM0_C2SC &= ~((TPM_CnSC_ELSB_MASK) | (TPM_CnSC_ELSA_MASK) | (TPM_CnSC_MSB_MASK) | (TPM_CnSC_MSA_MASK));
    TPM0_C2SC |= (TPM_CnSC_ELSB(1) | TPM_CnSC_MSB(1));
    
    TPM0_C5SC &= ~((TPM_CnSC_ELSB_MASK) | (TPM_CnSC_ELSA_MASK) | (TPM_CnSC_MSB_MASK) | (TPM_CnSC_MSA_MASK));
    TPM0_C5SC |= (TPM_CnSC_ELSB(1) | TPM_CnSC_MSB(1));
    TPM0_C1SC &= ~((TPM_CnSC_ELSB_MASK) | (TPM_CnSC_ELSA_MASK) | (TPM_CnSC_MSB_MASK) | (TPM_CnSC_MSA_MASK));
    TPM0_C1SC |= (TPM_CnSC_ELSB(1) | TPM_CnSC_MSB(1));
    
    TPM2_C0SC &= ~((TPM_CnSC_ELSB_MASK) | (TPM_CnSC_ELSA_MASK) | (TPM_CnSC_MSB_MASK) | (TPM_CnSC_MSA_MASK));
    TPM2_C0SC |= (TPM_CnSC_ELSB(1) | TPM_CnSC_MSB(1));
    TPM2_C1SC &= ~((TPM_CnSC_ELSB_MASK) | (TPM_CnSC_ELSA_MASK) | (TPM_CnSC_MSB_MASK) | (TPM_CnSC_MSA_MASK));
    TPM2_C1SC |= (TPM_CnSC_ELSB(1) | TPM_CnSC_MSB(1));
}

void initAudio(void) {
    SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
    
    PORTB->PCR[PTB1_Pin] &= ~PORT_PCR_MUX_MASK;
    PORTB->PCR[PTB1_Pin] |= PORT_PCR_MUX(3);
    
    SIM_SCGC6 |= SIM_SCGC6_TPM1_MASK;
    
    SIM->SOPT2 &= ~SIM_SOPT2_TPMSRC_MASK;
    SIM->SOPT2 |= SIM_SOPT2_TPMSRC(1);
    
    TPM1->SC &= ~((TPM_SC_CMOD_MASK) | (TPM_SC_PS_MASK));
    TPM1->SC |= (TPM_SC_CMOD(1) | TPM_SC_PS(7));
    TPM1->SC &= ~(TPM_SC_CPWMS_MASK);
    
    TPM1_C1SC &= ~((TPM_CnSC_ELSB_MASK) | (TPM_CnSC_ELSA_MASK) | (TPM_CnSC_MSB_MASK) | (TPM_CnSC_MSA_MASK));
    TPM1_C1SC |= (TPM_CnSC_ELSB(1) | TPM_CnSC_MSB(1));    
}

void initGPIO(void)
{
    SIM->SCGC5 |= ((SIM_SCGC5_PORTC_MASK) | (SIM_SCGC5_PORTE_MASK));

    PORTC->PCR[GC1] &= ~PORT_PCR_MUX_MASK;
    PORTC->PCR[GC1] |= PORT_PCR_MUX(1);
    PORTC->PCR[GC2] &= ~PORT_PCR_MUX_MASK;
    PORTC->PCR[GC2] |= PORT_PCR_MUX(1);
    PORTC->PCR[GC3] &= ~PORT_PCR_MUX_MASK;
    PORTC->PCR[GC3] |= PORT_PCR_MUX(1);
    PORTC->PCR[GC4] &= ~PORT_PCR_MUX_MASK;
    PORTC->PCR[GC4] |= PORT_PCR_MUX(1);
    PORTC->PCR[GC5] &= ~PORT_PCR_MUX_MASK;
    PORTC->PCR[GC5] |= PORT_PCR_MUX(1);
    PORTC->PCR[GC6] &= ~PORT_PCR_MUX_MASK;
    PORTC->PCR[GC6] |= PORT_PCR_MUX(1);
    PORTC->PCR[GC7] &= ~PORT_PCR_MUX_MASK;
    PORTC->PCR[GC7] |= PORT_PCR_MUX(1);
    PORTC->PCR[GC8] &= ~PORT_PCR_MUX_MASK;
    PORTC->PCR[GC8] |= PORT_PCR_MUX(1);
    
    PORTE->PCR[RED] &= ~PORT_PCR_MUX_MASK;
    PORTE->PCR[RED] |= PORT_PCR_MUX(1);

    PTC->PDDR |= (MASK(GC1) | MASK(GC2) | MASK(GC3) | MASK(GC4) | MASK(GC5) | MASK(GC6) | MASK(GC7) | MASK(GC8));
    PTE->PDDR |= MASK(RED);
}

void initUART2(void) {
    uint32_t divisor, bus_clock;
    
    SIM->SCGC4 |= SIM_SCGC4_UART2_MASK;
    SIM->SCGC5 |= SIM_SCGC5_PORTE_MASK;

    PORTE->PCR[UART_RX_PORTE23] &= ~PORT_PCR_MUX_MASK;
    PORTE->PCR[UART_RX_PORTE23] |= PORT_PCR_MUX(4);
    
    UART2->C2 &= ~((UART_C2_RIE_MASK) | (UART_C2_RE_MASK));

    bus_clock = (DEFAULT_SYSTEM_CLOCK)/2;
    divisor = bus_clock / (BAUD_RATE * 16); 
    UART2->BDH = UART_BDH_SBR(divisor >> 8);
    UART2->BDL = UART_BDL_SBR(divisor);
    
    UART2->C1 = 0;
    UART2->S2 = 0;
    UART2->C3 = 0;

    NVIC_SetPriority(UART2_IRQn, 128);
    NVIC_ClearPendingIRQ(UART2_IRQn);
    NVIC_EnableIRQ(UART2_IRQn);
    
    UART2->C2 |= ((UART_C2_RIE_MASK) | (UART_C2_RE_MASK));
}